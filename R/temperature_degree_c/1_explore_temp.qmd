---
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width=8)

library(dplyr)
library(DT)
library(here)
library(ggplot2)
library(leaflet)
library(lubridate)
library(plotly)
library(RColorBrewer)
library(readr)
library(summaryplots)

theme_set(theme_light())

dt_options <- list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
        scrollY = "500px",
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
)

dat <- read_csv(here("data/summary.csv"), show_col_types = FALSE) %>% 
  filter(variable == "Temperature")

st_locations <- read_csv(
  here("data/Station_Locations_2022-12-06.csv"), show_col_types = FALSE
)

county_pal <- get_county_colour_palette(length(unique(st_locations$COUNTY)))

```

# EXPLORATORY ANALYSIS: TEMPERATURE

**DRAFT April 21, 2023**

- Data submitted to the Open Data Portal in December 2022.

- Preliminary QC was applied to the data.
  - Obvious outliers removed.

- Depth rounded to nearest whole number
  - Results in depth of 0 m for 1042, Captains Pond, Ile due Havre, Sissiboo, Sober Island, and Back Harbour.
  
## Station Locations

Approximate location of stations with temperature data.
Marker size is proportional to the number of temperature observations within the county.

```{r}
#| fig-height: 7

# # set up colour palette - need to interpolate with colorRampPalette
# n_col = length(unique(st_locations$COUNTY))
# getpal = colorRampPalette(brewer.pal(8, "Dark2"))
# pal <- colorFactor(getpal(n_col), domain = unique(st_locations$COUNTY))

# join the station locations dataset with the number of obs from each station
st_locations <- st_locations %>% 
  inner_join(
    dat %>% 
      filter(group == "all_station", variable == "Temperature") %>% 
      select(COUNTY = county, STATION = station, n),
    by = c("COUNTY", "STATION") 
  ) %>% 
  group_by(COUNTY) %>% 
  mutate(
    n_prop = round(n / sum(n), digits = 2),
    popup = paste(COUNTY, STATION, n_prop, sep = "</br>")
  ) 

# interactive map
leaflet(st_locations) %>% 
  addProviderTiles(providers$CartoDB.Positron) %>% 
  add_circle_markers_county(
    county_pal = county_pal, 
    size =  ~n_prop * 25
  ) %>% 
  add_county_fill_legend(county_pal = county_pal)

```

```{r}
temp_county <- dat %>% 
  filter(group == "county" | group == "all_data") %>%
  mutate(
    county = if_else(group == "all_data", "All", county),
    n_percent = round(n * 100 / max(n), digits = 1)
  ) %>% 
  select(-c(depth, month, group))
```

## County

::: panel-tabset

### Figure 1
```{r}
#| fig-height: 8
#| fig-cap: The number of temperatures observations in each county. The number at the end of each bar indicates the percent of the total temperature observations from the associated county.
#| fig-cap-location: top

p <- temp_county  %>% 
  filter(county != "All") %>% 
  plot_n_obs_county()

ggplotly(p, tooltip = "text")
```

### Figure 2
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- plot_mean_sd_county(temp_county)

ggplotly(p, tooltip = "text")
```

### Table 1
```{r}
#| fig-cap: Summary statistics of temperature observations - total and by county.
#| fig-cap-location: top

temp_county %>% 
  select(county, n, mean, stdev) %>% 
  datatable(options = dt_options, rownames = FALSE)
```

:::

## Depth
```{r}
temp_depth <- dat %>% 
  filter(group == "all_depth", variable == "Temperature") %>% 
  mutate(n_percent = round(n * 100 / sum(n), digits = 1)) %>% 
  select(-c(month, group, station, units, county))
```

::: panel-tabset

### Figure 3
```{r}
#| fig-height: 10
#| fig-cap: Number of temperature observations at each depth.
#| fig-cap-location: top

p <- plot_n_obs_depth(temp_depth, facet_county = FALSE)

ggplotly(p, tooltip = "text")
```

### Figure 4
```{r}
#| fig-height: 10
#| fig-cap: Mean and standard deviation of temperature at each depth.
#| fig-cap-location: top

p <- plot_mean_sd_depth(temp_depth, facet_county = FALSE, text_size = 12)

ggplotly(p, tooltip = "text")
```
:::

## County + Depth

```{r}
temp_county_depth <- dat %>% 
  filter(group == "county_depth") 
```

::: panel-tabset

### Figure 5
```{r}
#| fig.height: 8
#| fig-cap: Depths with temperature measurements by county.
#| fig-cap-location: top

p <- ggplot(temp_county_depth, aes(depth, county, col = factor(depth))) +
  geom_point(size = 4) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Sensor Depth Below the Surface at Low Tide (m)") +
  scale_color_discrete("depth")

ggplotly(p)
```

### Figure 6
```{r}
#| fig-height: 10
#| fig-cap: The number of temperature obervations at each depth for each county.
#| fig-cap-location: top

p <- plot_n_obs_depth(temp_county_depth)

ggplotly(p)

```

### Figure 7
```{r}
#| fig-height: 10
#| fig-cap: Average temperature and standard deviation for each county at each measured depth. 

p <- plot_mean_sd_depth(temp_county_depth, text_size = 12)

ggplotly(p, tooltip = "text")
```
:::

- Could group depths before average, but how to group? 15 m could be bottom for 1 station and middle of water column for another.
  - If depth matters, then station matters too.
- Digby 31 m: measured at Long Island from January - May; 32 m: measured at Long Island 2 from July - November.
- Guysborough 11 m: only measured for Tanner Island and English Harbour in Winter 2019 (February - March). Bottom temp.
- Inverness: only one deployment for many depths
- Lunenburg: clear decease in temperature at depth.
- Shelburne 16 m: measured at Ingomar from Janurary - May, then only at 15 m
- Victoria: not a lot of difference in temperature through the water column

## Month
```{r}
temp_month <- dat %>% 
  filter(group == "all_month") %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) 
```

::: panel-tabset

### Figure 8
```{r}
#| fig-height: 8
#| fig-cap: The number of temperatures observations in each month. The number at the end of each bar indicates the percent of the total temperature observations from the associated month.

p <- plot_n_obs_month(temp_month, facet_county = FALSE)

ggplotly(p)
```

### Figure 9
```{r}
#| fig-height: 8
#| fig-cap: Monthly mean and standard deviation.

p <- plot_mean_sd_season(temp_month, facet_county = FALSE)

ggplotly(p)

```

:::

## Month + Year 

```{r}
temp_month_year <- dat %>% 
  filter(group == "all_month_year") %>%
  group_by(year) %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) %>% 
  ungroup() %>% 
  select(-group)

```

::: panel-tabset

### Figure 10
```{r}
#| fig-height: 10
#| fig-cap: The number of temperature observations for each month by year.
#| fig-cap-location: top

p <- plot_n_obs_month(temp_month_year, text_size = 12) +
  facet_wrap(~year) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 11
```{r}
#| fig-height: 10
#| fig-cap: Monthly climatology by year.

p <- plot_mean_sd_season(temp_month_year) +
  facet_wrap(~year) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 12
```{r}
#| fig-height: 8
#| fig-cap: Monthly climatology by year - interactive.
#| fig-cap-location: top

temp_month_year <- temp_month_year %>% 
  mutate(year = factor(year))

p <- plot_mean_sd_season_ribbon(
  temp_month_year, group = "year", facet_county = FALSE
)

ggplotly(p, tooltip = "text")

```

### Climatology Table

```{r}
temp_month_year %>% 
  select(year, month, n, mean, stdev) %>% 
  datatable(options = dt_options, rownames = FALSE)
```

:::

- Consistent observations starting in 2018
- Fairly uniform coverage for each month (except for January 2018)
- 2019 was the coldest year (in February + March)
- 2017 was relatively warm

## Month + County
```{r}
temp_month_county <- dat %>% 
  filter(group == "county_month", variable == "Temperature") %>% 
  mutate(month = month(month, label = TRUE)) 
```

::: panel-tabset

### Figure 13
```{r}
#| fig-height: 10
#| fig-cap: The number of temperature observations in each month for each county.
#| fig-cap-location: top

p <- plot_n_obs_month(temp_month_county) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 14
```{r}
#| fig-height: 10
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- plot_mean_sd_season(temp_month_county) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 15
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- plot_mean_sd_season_ribbon(
  temp_month_county, facet_county = FALSE, group = "county"
)

ggplotly(p, tooltip = "text")

```
:::

- Cape Breton: few temperature observations each month.
- Inverness: most temperature observations from June to November.

## Month + County + Year
```{r}
temp_month_county_year <- dat %>% 
  filter(group == "county_month_year", variable == "Temperature") %>% 
  group_by(year, month) %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE),
    variable = "Temperature", 
    year = factor(year)
  ) %>% 
  select(-c(units, group, station, depth)) %>% 
  ungroup()
```

### Number of Obervations

Note: x-axis is not consistent between figures.

Figures are not interactive.

::: panel-tabset

```{r}
#| fig-height: 8
#| results: "asis"

counties <- unique(temp_month_county_year$county)

for(i in seq_along(counties)){
  
  county.i <- counties[i]
  dat.i <- temp_month_county_year %>% filter(county == county.i)
  
  cat('\n###', county.i, '\n')
  
  p <- plot_n_obs_month(dat.i, text_size = 12) +
    facet_wrap(~year) 

  print(p)
  
}
```
:::

### Climatology

Figures are not interactive.

::: panel-tabset

```{r}
#| fig-height: 6
#| results: "asis"

n_years <- length(unique(temp_month_county_year$year))

for(i in seq_along(counties)){
  
  county.i <- counties[i]
  
  dat.i <- temp_month_county_year %>% 
    filter(county == county.i)
  
  cat('\n###', county.i, '\n')
  
  p <- plot_mean_sd_season_ribbon(
    dat.i, group = "year",
    n_group = n_years,
    facet_county = FALSE, y_limits = c(-2, 27)
  )
  # ggplot(dat.i, aes(month, mean, group = year, col = factor(year))) +
  # geom_point(size = 3) +
  # geom_line(aes(col = factor(year))) +
  # geom_ribbon(
  #   aes(ymin = mean - stdev, ymax = mean + stdev, fill = factor(year)), 
  #   alpha = 0.25, col = NA
  # ) +
  # scale_x_discrete(name = "") +
  # scale_y_continuous(
  #   "Temperature (mean +/- standard deviation)",
  #   limits = c(-2, 27)
  # )  
  
  print(p)
}
  
```

:::

- Inverness - 2019: the only data from this year is from Denas Pond, a small, shallow body of water connected to the little narrows. Suggest removing this deployment from the analysis of what is "normal".
- Pictou: 
  - 2020: Piper Lake deployment January to May. Consider removing this deployment from the analysis.
  - no data June - August 2020
  

- Climatology should probably be resolved by county, even though there are only 1 - 2 years of data for some months / counties. Counties with deep sensors (e.g., Guysborough, Shelburne) are significantly colder than counties with shallow sensors (e.g., Antigonish, Colchester), especially in the summer.
