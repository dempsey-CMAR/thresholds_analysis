---
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(dplyr)
library(DT)
library(here)
library(ggplot2)
library(leaflet)
library(lubridate)
library(plotly)
library(RColorBrewer)
library(readr)
library(sensorstrings)
library(strings)
library(summaryplots)
library(tidyr)
library(viridis)

source(here("functions/subchunkify.R"))

theme_set(theme_light())

x_axis <- scale_x_continuous("Dissolved Oxygen (percent saturation)")

dt_options <- list(
  dom = 'ft',
  paging = FALSE,
  searching = TRUE,
  scrollY = "500px",
  columnDefs = list(list(className = 'dt-center', targets = "_all"))
)

# data - preliminary QC 
dat_all <- readRDS(here("data/do_rolling_sd_prelim_qc.rds")) %>% 
  select(
    -c(sensor_type, int_sample, n_sample, rolling_sd_flag_dissolved_oxygen_percent_saturation)
  ) %>% 
  mutate(
    depth = factor(sensor_depth_at_low_tide_m),
    year = factor(year(timestamp_utc)),
    month = month(timestamp_utc)
  ) %>% 
  na.omit() 

# filtered data
dat_filt <- dat_all %>% 
   filter(
    !(station %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo")),
    !(county == "Inverness" & depth %in% c(8, 18, 28, 36)),
    !(county == "Guysborough" & depth == 60)
  )

county_pal <- get_county_colour_palette(length(unique(dat_all$county)))
depth_pal <- viridis(length(unique(dat_all$sensor_depth_at_low_tide_m)), direction = -1)
year_pal <- viridis( length(unique(dat_all$year)), option = "C")

theme_facet_plotly <- theme(
  panel.spacing.y = unit(30, "lines"),
  panel.spacing.x = unit(20, "lines")
)

```

# Dissolved Oxygen: Rolling Standard Deviation Distribution

DRAFT July 25, 2023

- Data submitted to the Open Data Portal in December 2022.
- Depth rounded to nearest whole number
  - Results in depth of 0 m for 1042 and Sissiboo.
  
- Preliminary QC (submitted to Open Data Portal)
  - Obvious outliers removed.
  - Suspected biofouling removed.

- Filtered Data
  - Fresh water stations not considered.
    - Piper Lake, Hourglass Lake, Sissiboo
  - Other "outlier" data series not considered
    - Data from Whycocmagh Bay near or below the oxycline (8, 18, 28, 36 m)
    - Tickle Island at 60 m

- Rolling standard deviation is not normally distributed.
- Distribution is skewed right.
- For thresholds, we are concerned about high rolling standard deviations.
  - Eventually could use rolling standard deviation = 0 as a type of flat line test.
- Consider using upper quartiles (e.g., 95, 97, 99, 99.7) as threshold values instead of mean + 3 * sd.


## Preliminary QC 

### Pooled

::: panel-tabset

#### Figure 1: All observations
```{r}
#| label: fig-dist-all
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %).

p <- plot_histogram(dat_all, hist_col = sd_roll, binwidth = 0.25) +
  x_axis

ggplotly(p)
```

#### Figure 2: By depth
```{r}
#| label: fig-dist-all-depth
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), coloured by depth.

p <- plot_histogram(
  dat_all, hist_col = sd_roll, binwidth = 0.25,
  fill_col = depth, pal = depth_pal
) +
  x_axis

ggplotly(p)
```

#### Figure 3: By year
```{r}
#| label: fig-dist-all-year
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), coloured by year.

p <- plot_histogram(
  dat_all, hist_col = sd_roll, binwidth = 0.25, 
  fill_col = year, pal = year_pal
) +
  x_axis

ggplotly(p)
```

:::

### County

::: panel-tabset

#### Figure 4: County 
```{r}
#| label: fig-dist-county
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations by county (binwidth = 0.25 %).

p <- dat_all %>% 
  plot_histogram(hist_col = sd_roll, binwidth = 0.25) +
  x_axis +
  facet_wrap(~county, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```

#### Figure 5: County + Depth
```{r}
#| label: fig-dist-county-depth
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), within each county, coloured by depth.

p <- plot_histogram(
  dat_all, hist_col = sd_roll, binwidth = 0.25, fill_col = depth, pal = depth_pal
) +
  x_axis +
  facet_wrap(~county, scales = "free", ncol = 3) +
  theme_facet_plotly
  
ggplotly(p)
```

#### Figure 6: County + Year
```{r}
#| label: fig-dist-county-year
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), within each county coloured by year.

p <- plot_histogram(
  dat_all, hist_col = sd_roll, binwidth = 0.25, fill_col = year, pal = year_pal
) +
  x_axis +
  facet_wrap(~county, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```
:::

#### County + Month + Year

::: panel-tabset
```{r}
#| fig-height: 10
#| results: "asis"

counties <- unique(dat_all$county)

dat_all <- dat_all %>% 
  mutate(month = month(month, label = TRUE))

for(i in seq_along(counties)){
  
  county_i <- counties[i]
  dat_i <- dat_all %>% 
    filter(county == county_i) 
  
  cat('\n###', county_i, '\n')
  
  p <- plot_histogram(
    dat_i, hist_col = sd_roll, binwidth = 0.25, fill_col = year, pal = year_pal
  ) +
    x_axis +
    facet_wrap(~month, ncol = 3)  
  
  print(p)
}

```
:::


### Summary Statistics

::: panel-tabset

#### Figure 7: Central Tendancy
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of rolling standard deviation in each county.
#| label: fig-mean-filt

stats_all <- dat_all %>% 
  summarise(
    max = max(sd_roll),
    mean = mean(sd_roll),
    med = median(sd_roll),
    stdev = sd(sd_roll),
    
    q_95 = quantile(sd_roll, prob = 0.95),
    q_97 = quantile(sd_roll, prob = 0.97),
    q_99 = quantile(sd_roll, prob = 0.99),
    q_997 = quantile(sd_roll, prob = 0.997)
  ) %>% 
  mutate(county = "All") %>% 
  bind_rows(
    dat_all %>% 
      group_by(county) %>% 
      summarise(
        max = max(sd_roll),
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) 
  ) %>%
  mutate(
    variable = "dissolved oxygen_percent_saturation",
    thresh_3sd = mean + 3 * stdev,
    across(.cols = where(is.numeric), .fns = round, digits = 2)
  ) %>% 
  select(county, everything())

p <- plot_mean_sd_county(stats_all)

ggplotly(p)
```

#### Figure 8: Quantiles
```{r}
#| fig-cap: Upper quantiles.
#| fig-height: 7
#| label: fig-quantiles-filt

p <- stats_all %>% 
  select(county, contains("q")) %>% 
  pivot_longer(cols = contains("q"), names_to = "quantile") %>% 
  ggplot(aes(quantile, value, group = county, col = county)) +
  geom_point() +
  geom_line() +
  scale_color_manual(values = c("grey20", county_pal), drop = FALSE) +
  scale_y_continuous(limits = c(1.5, 13))

ggplotly(p)
```

#### Table 1: Summary statistics
```{r}
stats_all %>% 
  select(-c(variable, max, contains("thresh"))) %>% 
  datatable(
    options = list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), rownames = FALSE)
```

:::

## Filtered Data

### Pooled

::: panel-tabset

#### Figure 9: All observations
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %).

p <- plot_histogram(dat_filt, hist_col = sd_roll, binwidth = 0.25) +
  x_axis

ggplotly(p)
```

#### Figure 10: By depth
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), coloured by depth.

p <- plot_histogram(
  dat_filt, hist_col = sd_roll, binwidth = 0.25,
  fill_col = depth, pal = depth_pal
) +
  x_axis

ggplotly(p)
```

#### Figure 11: By year
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), coloured by year.

p <- plot_histogram(
  dat_filt, hist_col = sd_roll, binwidth = 0.25, 
  fill_col = year, pal = year_pal
) +
  x_axis

ggplotly(p)
```

:::

### County

::: panel-tabset

#### Figure 12: County 
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations by county (binwidth = 0.25 %).

p <- dat_filt %>% 
  plot_histogram(hist_col = sd_roll, binwidth = 0.25) +
  x_axis +
  facet_wrap(~county, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```

#### Figure 13: County + Depth
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), within each county, coloured by depth.

p <- plot_histogram(
  dat_filt, hist_col = sd_roll, binwidth = 0.25, fill_col = depth, pal = depth_pal
) +
  x_axis +
  facet_wrap(~county, scales = "free", ncol = 3) +
  theme_facet_plotly
  
ggplotly(p)
```

#### Figure 14: County + Year
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 0.25 %), within each county coloured by year.

p <- plot_histogram(
  dat_filt, hist_col = sd_roll, binwidth = 0.25, fill_col = year, pal = year_pal
) +
  x_axis +
  facet_wrap(~county, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```
:::

#### County + Month + Year

::: panel-tabset
```{r}
#| fig-height: 10
#| results: "asis"

counties <- unique(dat_filt$county)

dat_filt <- dat_filt %>% 
  mutate(month = month(month, label = TRUE))

for(i in seq_along(counties)){
  
  county_i <- counties[i]
  dat_i <- dat_filt %>% 
    filter(county == county_i) 
  
  cat('\n###', county_i, '\n')
  
  p <- plot_histogram(
    dat_i, hist_col = sd_roll, binwidth = 0.25, fill_col = year, pal = year_pal
  ) +
    x_axis +
    facet_wrap(~month, ncol = 3)  
  
  print(p)
}

```
:::


### Summary Statistics

::: panel-tabset

#### Figure 15: Central Tendancy
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of rolling standard deviation in each county.

stats_filt <- dat_filt %>% 
  summarise(
    max = max(sd_roll),
    mean = mean(sd_roll),
    med = median(sd_roll),
    stdev = sd(sd_roll),
    
    q_90 = quantile(sd_roll, prob = 0.90),
    q_95 = quantile(sd_roll, prob = 0.95),
    q_97 = quantile(sd_roll, prob = 0.97),
    q_99 = quantile(sd_roll, prob = 0.99),
    q_997 = quantile(sd_roll, prob = 0.997)
  ) %>% 
  mutate(county = "All") %>% 
  bind_rows(
    dat_filt %>% 
      group_by(county) %>% 
      summarise(
        max = max(sd_roll),
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_90 = quantile(sd_roll, prob = 0.90),
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) 
  ) %>%
  mutate(
    variable = "dissolved oxygen_percent_saturation",
    thresh_3sd = mean + 3 * stdev,
    across(.cols = where(is.numeric), .fns = round, digits = 2)
  ) %>% 
  select(county, everything())

p <- plot_mean_sd_county(stats_all)

ggplotly(p)

# stats_filt %>%
  # select(-c(variable, max, contains("thresh"))) %>%
  # write_csv(file = here("output/do_rolling_sd_thresholds.csv"))

```

#### Figure 16: Quantiles
```{r}
#| fig-cap: Upper quantiles.
#| fig-height: 7

p <- stats_filt %>% 
  select(county, contains("q")) %>% 
  pivot_longer(cols = contains("q"), names_to = "quantile") %>% 
  ggplot(aes(quantile, value, group = county, col = county)) +
  geom_point() +
  geom_line() +
  scale_color_manual(values = c("grey20", county_pal), drop = FALSE) +
  scale_y_continuous(limits = c(1.5, 13))

ggplotly(p)
```

#### Table 2: Summary statistics
```{r}
stats_filt %>% 
  select(-c(variable, max, contains("thresh"))) %>% 
  datatable(
    options = list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), rownames = FALSE)
```

:::

## Investigate Antigonish & Inverness  

Antigonish and Inverness have very different upper quantiles compared to the other stations. Investigate to see if these counties should be removed from the threshold analysis.

::: panel-tabset

```{r, body} 
#| results: 'asis'
#| message: FALSE

stations <- c("Monks Head", "Aberdeen", "Deep Basin")

for(i in seq_along(stations)){

  station_i <- stations[i]

  # subset data to station of interest
  dat_i <- dat_filt %>%
    filter(station == station_i) %>% 
    mutate(sensor_type = "aquameasure") %>% 
    ss_convert_depth_to_ordered_factor()
  
  cat('\n###', unique(dat_i$county), '\n')
  
  cat('\n')
  
  p <- ss_ggplot_variables(dat_i) +
    scale_y_continuous("Dissolved Oxygen (% sat)", limits = c(60, 140)) +
    theme(strip.text = element_blank())
  
  cat('\n####', station_i, '\n')
  
  subchunkify(p, fig_height = 3, fig_width = 8.5)
  
  cat('\n')
}
```
:::

### Table 3
```{r}

dat_filt %>% 
  summarise(
    mean = mean(sd_roll),
    med = median(sd_roll),
    stdev = sd(sd_roll),
    
    q_90 = quantile(sd_roll, prob = 0.90),
    q_95 = quantile(sd_roll, prob = 0.95),
    q_97 = quantile(sd_roll, prob = 0.97),
    q_99 = quantile(sd_roll, prob = 0.99),
    q_997 = quantile(sd_roll, prob = 0.997)
  ) %>% 
  mutate(group = "dat_filt") %>% 
  bind_rows(
    dat_filt %>% 
      filter(county != "Antigonish") %>% 
      summarise(
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_90 = quantile(sd_roll, prob = 0.90),
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) %>% 
      mutate(group = "no_antigonish") 
  ) %>% 
  bind_rows(
    dat_filt %>% 
      filter(county != "Inverness") %>% 
      summarise(
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_90 = quantile(sd_roll, prob = 0.90),
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) %>% 
      mutate(group = "no_inverness") 
  ) %>% 
  bind_rows(
    dat_filt %>% 
      filter(!(county %in% c("Antigonish", "Inverness"))) %>% 
      summarise(
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_90 = quantile(sd_roll, prob = 0.90),
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) %>% 
      mutate(group = "no_anti_or_inv") 
  ) %>% 
  mutate(across(.cols = where(is.numeric), .fns = round, digits = 2)) %>% 
  select(group, everything()) %>% 
  datatable(
    options = list(
      dom = 'ft',
      paging = FALSE,
      searching = FALSE,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), rownames = FALSE)

```

</br>

Antigonish and Inverness have limited impact on the overall summary statistics, likely because they have relatively few observations.

For consistency with the Gross Range and Climatology thresholds, do not remove these counties before calculating the rolling standard deviation thresholds.


`r knitr::knit_exit()`

