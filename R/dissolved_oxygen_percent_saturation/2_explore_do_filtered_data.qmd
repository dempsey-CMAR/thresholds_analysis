---
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(dplyr)
library(DT)
library(here)
library(ggplot2)
library(leaflet)
library(lubridate)
library(plotly)
library(quarto)
library(RColorBrewer)
library(readr)

theme_set(theme_light())

dt_options <- list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
      scrollY = "500px",
      pageLength = 500,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
)

# summarized data 
dat <- read_csv(
  here("data/summary_filtered_data.csv"), show_col_types = FALSE
) %>% 
  filter(variable == "Dissolved Oxygen", units == "percent saturation")

# station locations
st_locations <- read_csv(
  here("data/Station_Locations_2022-12-06.csv"), show_col_types = FALSE
)

```

# EXPLORATORY ANALYSIS: DISSOLVED OXYGEN

**DRAFT February 14, 2023 <3**

- Data submitted to the Open Data Portal in December 2022.

- Preliminary QC was applied to the data.
  - Obvious outliers removed.
  - Suspected biofouling removed.
  - Fresh water and other "outlier" stations not considered.
    - Piper Lake, Hourglass Lake, 0193 (Denas Pond), Sissiboo
    - Data from Whycocmagh Bay near or below the oxycline (8, 18, 28, 36 m)

- Depth rounded to nearest whole number
  - Results in depth of 0 m for 1042 and Sissiboo.
  
# Station Locations

Approximate location of stations with dissolved oxygen data.
Marker size is proportional to the number of dissolved oxygen observations within the county.

```{r}
#| fig-height: 7

# set up colour palette - need to interpolate with colorRampPalette
n_col = length(unique(st_locations$COUNTY))
getpal = colorRampPalette(brewer.pal(8, "Dark2"))
pal <- colorFactor(getpal(n_col), domain = unique(st_locations$COUNTY))

# join the station locations dataset with the number of obs from each station
st_locations <- st_locations %>% 
  rename(county = COUNTY, station = STATION) %>% 
  inner_join(
    dat %>% 
      filter(group == "all_station", variable == "Dissolved Oxygen") %>% 
      select(county, station, n),
    by = c("county", "station") 
  ) %>% 
  group_by(county) %>% 
  mutate(
    n_prop = round(n / sum(n), digits = 2),
    popup = paste(county, station, n_prop, sep = "</br>")
  ) 

# interactive map
leaflet(st_locations) %>% 
  addProviderTiles(providers$CartoDB.Positron) %>% 
  addCircleMarkers(
    lng = ~LONGITUDE, lat = ~LATITUDE, weight = 1,
    radius = ~n_prop * 25,
    color = ~pal(county),
    fillColor =  ~pal(county),
    popup = ~popup,
    fillOpacity = 0.5
  )
```

- 5 counties have only 1 station with dissolved oxygen data: Antigonish, Colchester, Pictou, Queens, and Richmond.
- Guysborough has 18 stations with dissolved oxygen data.

# Gross Range

```{r}
county <- dat %>% 
  filter(group == "county" | group == "all_data") %>% 
  mutate(
    county = if_else(group == "all_data", "All", county),
    n_percent = round(n * 100 / max(n), digits = 1)
  ) %>% 
  select(-c(variable, units, year, depth, month, station))
```

## County

::: panel-tabset

### Figure 1
```{r}
#| fig-height: 8
#| fig-cap: The number of dissolved oxygens observations in each county. The number at the end of each bar indicates the percent of the total dissolved oxygen observations from the associated county.
#| fig-cap-location: top

p <- county %>% 
  filter(county != "All") %>% 
  ggplot(aes(n, county)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  geom_text(aes(label = n_percent), nudge_x = 3e4, size = 3) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Dissolved Oxygen Observations")

ggplotly(p)
```

### Figure 2
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of dissolved oxygen in each county.
#| fig-cap-location: top

p <- ggplot(county, aes(mean, county)) +
  geom_point(size = 4) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), width = 0
  ) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Dissolved Oxygen (mean +/- standard deviation)")

ggplotly(p)
```

### Table 1
```{r}
#| fig-cap: Summary statistics of dissolved oxygen observations - total and by county. Grossrange user-defined thresholds are calculated as user_min = mean - 3 * stdev and user_max = mean + 3 * stdev.
#| fig-cap-location: top

county %>% 
  select(county, n, mean, stdev) %>% 
  mutate(user_min = mean - 3 * stdev, user_max = mean + 3 * stdev) %>% 
  datatable(options = dt_options, rownames = FALSE)
```
:::

## Depth

```{r}
depth <- dat %>% 
  filter(group == "all_depth") %>% 
  mutate(n_percent = round(n * 100 / sum(n), digits = 1)) %>% 
  select(-c(month, group, station, units, variable, county))
```

::: panel-tabset

### Figure 3
```{r}
#| fig-height: 10
#| fig-cap: Number of dissolved oxygen observations at each depth.
#| fig-cap-location: top

p <- ggplot(depth, aes(n, factor(depth), fill = factor(depth))) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  scale_x_continuous("Number of Dissolved Oxygen Observations") +
  scale_y_discrete(name = "Sensor Depth Below Surface at Low Tide (m)", limits = rev) +
  theme(legend.position = "none")

ggplotly(p)
```

### Figure 4
```{r}
#| fig-height: 10
#| fig-cap: Mean and standard deviation of dissolved oxygen at each depth.
#| fig-cap-location: top

p <- ggplot(depth, aes(mean, depth, col = factor(depth))) +
  geom_point(size = 1) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), width = 0
  ) +
  scale_y_reverse(name = "Sensor Depth Below the Surface at Low Tide (m)") +
  scale_x_continuous("Dissolved Oxygen (mean +/- standard deviation)")

ggplotly(p)
```
:::

- Dissolved oxygen sensors are typically placed at 5 m below the surface.
- 10 m observations are from: Snake Island, Lunenburg
- 15 m observations are from: Snake Island, Lunenburg and McNutts Island, Shelburne
- 20 m observations are from: Snake Island and Birchy Head, Lunenburg

## County + Depth

```{r}
county_depth <- dat %>% filter(group == "county_depth") 
```

::: panel-tabset

### Figure 5
```{r}
#| fig.height: 8
#| fig-cap: Depths with dissolved oxygen measurements by county.
#| fig-cap-location: top

p <- ggplot(county_depth, aes(depth, county, col = factor(depth))) +
  geom_point(size = 4) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Sensor Depth Below the Surface at Low Tide (m)")

ggplotly(p)
```

### Figure 6
```{r}
#| fig-height: 10
#| fig-cap: The number of dissolved oxygen obervations at each depth for each county.
#| fig-cap-location: top

p <- ggplot(county_depth, aes(depth, n, fill = factor(depth))) +
  geom_col() +
  scale_x_reverse(
    name = "Sensor Depth Below the Surface at Low Tide (m)"
  ) +
  scale_y_continuous("Number of Dissolved Oxygen Observations") +
  facet_wrap(~ county, ncol = 3) + 
  coord_flip() +
  theme(legend.position = "none")

ggplotly(p)
```

### Figure 7
```{r}
#| fig-height: 10
#| fig-cap: Average dissolved oxygen and standard deviation for each county at each measured depth. 

p <- ggplot(county_depth, aes(mean, depth, col = factor(depth))) +
  geom_point(size = 1) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), width = 0
  ) +
  scale_y_reverse(name = "Sensor Depth Below the Surface at Low Tide (m)") +
  scale_x_continuous("Dissolved Oxygen (mean +/- standard deviation)") +
  facet_wrap(~ county, ncol = 3) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 8

```{r}
#| fig-height: 8
#| fig-cap: Average dissolved oxygen and standard deviation of all observations (grey) and average dissolved oxygen at each depth.

p <- ggplot(filter(county, county != "All"), aes(mean, county)) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), 
    width = 0, linewidth = 1, col = "grey70"
  ) +
  geom_point(size = 5, pch = 21, fill = "grey70", col = "grey50") +
  geom_point(
    data = county_depth, 
    aes(mean, county, col = factor(depth)), 
    alpha = 0.75, size = 2
  ) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Dissolved Oxygen (percent saturation)")

ggplotly(p)
```
:::


- Could filter to only include depths <= 6 m (includes 88 % of observations from the filtered data set)

If 10, 15, and 20 m are excluded:

  - Lunenburg 
    - mean: 104.840 (2 % sat higher than original mean)
    - stdev: 4.84 (0.305 % sat lower than original sd)
  - Shelburne
    - mean: 105.914 (0.129 % sat lower than original mean)
    - stdev: 5.077 (0.184 % sat higher than original sd)

# Climatology

## Month
```{r}
month <- dat %>% 
  filter(group == "all_month") %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) 
```

::: panel-tabset

### Figure 9
```{r}
#| fig-height: 8
#| fig-cap: The number of dissolved oxygens observations in each month. The number at the end of each bar indicates the percent of the total dissolved oxygen observations from the associated month.
#| fig-cap-location: top

p <- ggplot(month, aes(n, month)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  geom_text(aes(label = n_percent), nudge_x = 1.5e4, size = 3) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Dissolved Oxygen Observations")

ggplotly(p)
```

### Figure 10
```{r}
#| fig-height: 8
#| fig-cap-location: top

p <- ggplot(month, aes(mean, month)) +
  geom_point(size = 4) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), width = 0
  ) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Dissolved Oxygen (mean +/- standard deviation)")

ggplotly(p)

```
:::

- Fewest dissolved oxygen observations in the spring and summer, likely due to biofouling.


## Month + Year 

```{r}
month_year <- dat %>% 
  filter(group == "all_month_year") %>%
  group_by(year) %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) 
```

::: panel-tabset

### Figure 11
```{r}
#| fig-height: 10
#| fig-cap: The number of dissolved oxygen observations for each month by year.
#| fig-cap-location: top

p <- ggplot(month_year, aes(n, month)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  geom_text(aes(label = n_percent), nudge_x = 1.8e4, size = 3) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Dissolved Oxygen Observations") +
  facet_wrap(~ year) + 
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 12
```{r}
#| fig-height: 10
#| fig-cap: Monthly climatology by year.
#| fig-cap-location: top

p <- ggplot(month_year, aes(mean, month)) +
  geom_point(size = 1) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), width = 0
  ) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Dissolved Oxygen (mean +/- standard deviation)") +
  facet_wrap(~ year)  + 
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 13
```{r}
#| fig-height: 8
#| fig-cap: Monthly climatology by year - interactive.
#| fig-cap-location: top

p <- ggplot(month_year, aes(month, mean, group = year, col = factor(year))) +
  geom_point(size = 3) +
  geom_line(aes(col = factor(year))) +
  geom_ribbon(
    aes(ymin = mean - stdev, ymax = mean + stdev, fill = factor(year)), 
    alpha = 0.25, col = NA
  ) +
  scale_x_discrete(name = "") +
  scale_y_continuous("Dissolved Oxygen (mean +/- standard deviation)") 

ggplotly(p)
```

### Table 2

```{r}
month_year %>% 
  select(year, month, n, mean, stdev) %>% 
  datatable(options = dt_options, rownames = FALSE)
```
:::

- There is a small but noticeable climatological cycle.
- Difficult to parse whether this is a true climatological cycle, or a function of not trimming all biofouling.

## Month + County
```{r}
county_month <- dat %>% 
  filter(group == "county_month") %>% 
  mutate(month = month(month, label = TRUE)) %>% 
  select(-c(variable, units, group, year, station, depth))
```

::: panel-tabset

### Figure 14
```{r}
#| fig-height: 10
#| fig-cap: The number of dissolved oxygen observations in each month for each county.
#| fig-cap-location: top

p <- ggplot(county_month , aes(n, month)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Dissolved Oxygen Observations") +
  facet_wrap(~ county, ncol = 3) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 15
```{r}
#| fig-height: 10
#| fig-cap: The mean and standard deviation of dissolved oxygen in each county.
#| fig-cap-location: top

p <- ggplot(county_month , aes(month, mean)) +
  geom_point(size = 1) +
  geom_errorbar(
    aes(ymin = mean - stdev, ymax = mean + stdev), width = 0
  ) +
  scale_x_discrete(
    name = "", breaks = c("Jan", "Mar", "May", "Jul", "Sep", "Nov")
  ) +
  scale_y_continuous("Dissolved Oxygen (mean +/- standard deviation)") +
  facet_wrap(~county, ncol = 3) +
  theme(panel.spacing.y = unit(15, "lines"))

ggplotly(p)
```

### Figure 16
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of dissolved oxygen in each county.
#| fig-cap-location: top

p <- ggplot(
  county_month, aes(month, mean, group = county, col = county)
) +
  geom_point(size = 3) +
  geom_line(aes(col = county)) +
  geom_ribbon(
    aes(ymin = mean - stdev, ymax = mean + stdev, fill = county), 
    alpha = 0.25, col = NA
  ) +
  scale_x_discrete(name = "") +
  scale_y_continuous("Dissolved Oxygen (mean +/- standard deviation)") 

ggplotly(p)
```

### Figure 17
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of dissolved oxygen in each county.
#| fig-cap-location: top

county_gr <- county_month %>% 
  rename(mean_month = mean) %>% 
  group_by(county) %>%
  summarise(
    mean = round(mean(mean_month), digits = 3),
    stdev = round(sd(mean_month), digits = 3),
    group = "county_climatology"
  ) %>% 
  bind_rows(
    county %>% 
      filter(group != "all_data") %>% 
      select(-c(n, n_percent))
  ) 

p <- ggplot(county_gr, aes(mean, county, fill = group, col = group)) +
  geom_errorbar(
    aes(xmin = mean - stdev, xmax = mean + stdev), 
    width = 0, linewidth = 1, alpha = 0.75
  ) +
  geom_point(size = 3, pch = 21, col = 1) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Dissolved Oxygen (percent saturation)")

ggplotly(p)
```

### Figure 18
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of dissolved oxygen in each county.
#| fig-cap-location: top

p <- ggplot(county_gr, aes(stdev, county, fill = group)) +
  geom_col(position = "dodge") +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Standard Deviation (percent saturation)")

ggplotly(p)
```
:::

- Fewest dissolved oxygen observations in the spring and summer, likely due to biofouling.
- Small but noticeable climatological cycle within counties.
- Very small standard deviations
- Some influence of number of observations per month impacting the mean.
  - Mean typically gets higher, because fewer observations in the spring/summer when DO is higher.
- 4 counties missing at least 1 month of data (Annapolis, Antigonish, Inverness, Pictou)

## Month + County + Year
```{r}
county_month_year <- dat %>% 
  filter(group == "county_month_year") %>% 
  group_by(year, month) %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) %>% 
  select(-c(variable, units, group, station, depth)) %>% 
  ungroup()
```

### Number of Obervations

Note: x-axis is not consistent between figures.

Figures are not interactive.

::: panel-tabset

```{r}
#| fig-height: 8
#| results: "asis"

counties <- unique(county_month_year$county)

for(i in seq_along(counties)){
  
  county.i <- counties[i]
  dat.i <- county_month_year %>% filter(county == county.i)
  
  cat('\n###', county.i, '\n')
  
  p <- ggplot(dat.i, aes(n, month)) +
    geom_col(
      position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
    ) +
    scale_y_discrete(name = "", limits = rev) +
    scale_x_continuous("Number of Dissolved Oxygen Observations") +
    facet_wrap(~ year)

  print(p)
}
```
:::

### Climatology

Note: colour scale is not consistent between figures.

Figures are not interactive.

::: panel-tabset

```{r}
#| fig-height: 6
#| results: "asis"

for(i in seq_along(counties)){
  
  county.i <- counties[i]
  dat.i <- county_month_year %>% 
    filter(county == county.i)
  
  cat('\n###', county.i, '\n')
  
  p <- ggplot(dat.i, aes(month, mean, group = year, col = factor(year))) +
    geom_point(size = 3) +
    geom_line(aes(col = factor(year))) +
    geom_ribbon(
      aes(ymin = mean - stdev, ymax = mean + stdev, fill = factor(year)),
      alpha = 0.25, col = NA
    ) +
    scale_x_discrete(name = "") +
    scale_y_continuous(
      "Dissolved Oxygen (mean +/- standard deviation)",
      limits = c(80, 120)
    )  
  
  print(p)
}
  
```
:::

