---
title: "Rate of Change Threshold: Dissolved Oxygen"
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(data.table)
library(DT)
library(dplyr)
library(ggplot2)
library(here)
library(lubridate)
library(plotly)
library(qaqcmar)
library(strings)
library(sensorstrings)
library(summaryplots)
library(tidyr)
library(viridis)

source(here("functions/subchunkify.R"))

theme_set(theme_light())

dt_options <- list(
  dom = 'ft',
  paging = FALSE,
  searching = TRUE,
  scrollY = "500px",
  columnDefs = list(list(className = 'dt-center', targets = "_all"))
)

dat_roll <- readRDS(here("output/do_rolling_sd.rds")) %>% 
  select(-c(sensor_type, int_sample, n_sample, rate_of_change_flag_dissolved_oxygen_percent_saturation)) %>% 
  mutate(county = factor(county)) %>% 
  na.omit() 

dat_do <- import_strings_data(
  input_path = here("data-raw"),
   county = c("Antigonish", "Colchester", "Digby", "Inverness", "Pictou", "Queens")
) %>% 
  mutate(
    COUNTY = case_when(
      STATION == "Sandy Cove Chedabucto" ~ "Guysborough",
      STATION == "Sandy Cove St. Marys" ~ "Digby", 
      TRUE ~ COUNTY)
  ) %>% 
  filter(
    VARIABLE == "Dissolved Oxygen", UNITS == "percent saturation",
    !(STATION %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo")),
    !(COUNTY == "Inverness" & DEPTH %in% c(8, 17.5, 18, 28, 35.5)),
    !(STATION == "Ram Island" & TIMESTAMP > as_datetime("2021-10-10") &
        TIMESTAMP < as_datetime("2021-11-15"))
  ) %>% 
  ss_reformat_old_data()


county_pal <- get_county_colour_palette(length(unique(dat_roll$county)))

```

This file explores the 24-hour rolling standard deviation of dissolved oxygen to inform an appropriate threshold for the Rate of Change test.

- The rolling standard deviation was calculated for each observation. 
- Summary statistics (e.g., mean, standard deviation, upper quartiles) were calculated for each county.
- Several counties were omitted due to data quality issues.
- Summary statistics were re-calculated and used to inform threshold.


Notes on the data:

- Data submitted to the Open Data Portal in December 2022.
- Preliminary QC was applied to the data.
  - Obvious outliers removed.
  - Fresh water and other "outlier" stations not considered.
    - Piper Lake, Hourglass Lake, 0193 (Denas Pond), Sissiboo.
- Additional QC was applied after reviewing summary statistics. 
    - Colchester, Digby, Inverness, Pictou, and Queens counties were removed from the analysis.
- Depth rounded to nearest whole number.
  - Results in depth of 0 m for station 1042.

# Summary Statistics 

Summary statistics by county.

::: panel-tabset

### Figure 1: Central Tendancy
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of rolling standard deviation in each county.
#| label: fig-mean

roll_stats <- dat_roll %>% 
  group_by(county) %>% 
  summarise(
    max = max(sd_roll),
    mean = mean(sd_roll),
    med = median(sd_roll),
    stdev = sd(sd_roll),
    
    q_95 = quantile(sd_roll, prob = 0.95),
    q_97 = quantile(sd_roll, prob = 0.97),
    q_99 = quantile(sd_roll, prob = 0.99),
    q_997 = quantile(sd_roll, prob = 0.997)
  ) %>% 
  rbind(
    dat_roll %>% 
      summarise(
        max = max(sd_roll),
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) %>% 
      mutate(county = "All")
  ) %>%
  mutate(
    variable = "dissolved oxygen_percent_saturation",
    thresh_3sd = mean + 3 * stdev,
    thresh_4sd = mean + 4 * stdev,
    across(.cols = where(is.numeric), .fns = round, digits = 2)
  )

p <- plot_mean_sd_county(roll_stats)

ggplotly(p)
```

### Figure 2: Quantiles
```{r}
#| fig-cap: Upper quantiles.
#| fig-height: 7
#| label: fig-quantiles

p <- roll_stats %>% 
  mutate(county = factor(county)) %>% 
  select(county, contains("q")) %>% 
  pivot_longer(cols = contains("q"), names_to = "quantile") %>% 
  ggplot(aes(quantile, value, group = county, col = county)) +
  geom_point() +
  geom_line() +
  scale_color_manual(values = c(county_pal, "grey20"), drop = FALSE) +
  scale_y_continuous(limits = c(1.5, 11.75))

ggplotly(p)
```

### Table 1: Summary statistics
```{r}
roll_stats %>% 
  select(-c(variable, max, contains("thresh"))) %>% 
  datatable(options = dt_options, rownames = FALSE)
```

:::

Antigonish, Inverness, Pictou, Digby, Queens, and Colchester consistently have the highest summary statistics (@fig-mean, @fig-quantiles, Table 1).

All of these counties (except for Digby) have dissolved oxygen data for only 2 deployments, and relatively few observations. Digby has 13 deployments with dissolved oxygen data, although a substantial number of observations were removed during the preliminary QC. Additional review of these counties suggests biofouling and other suspect signals that were not identified during the preliminary QC exercise.

## Deployments

### Table 2: Number of Deployments

The number of deployments and observations from used to calculate dissolved oxygen summary statistics (preliminary QC applied).

```{r}
#| message: false

n_depl <- dat_roll %>% 
  distinct(county, station, deployment_range) %>% 
  group_by(county) %>% 
  summarise(n_deployments = n()) %>%
  ungroup() %>% 
  left_join(
    dat_roll %>% 
      group_by(county) %>% 
      summarise(n_observations = n()) %>% 
      ungroup(),
    by = "county"
  ) %>% 
  arrange(n_deployments)

datatable(n_depl, options = dt_options, rownames = FALSE)

```

The following figures show the deployments from these counties, with preliminary QC applied (select deployments for Digby).

::: panel-tabset

```{r, body} 
#| results: 'asis'
#| message: FALSE

stations <- unique(dat_do$station)

for(i in seq_along(stations)){

  station_i <- stations[i]

  # subset data to station of interest
  dat_i <- dat_do %>%
    filter(station == station_i) %>% 
    ss_convert_depth_to_ordered_factor()
  
  cat('\n##', unique(dat_i$county), '\n')
  
  cat('\n')
  
  p <- ss_ggplot_variables(dat_i) +
    scale_y_continuous("Dissolved Oxygen (% sat)", limits = c(60, 140)) +
    theme(strip.text = element_blank())
  
  cat('\n###', station_i, '\n')
  
  subchunkify(p, fig_height = 3, fig_width = 8.5)
  
  cat('\n')
}
```
:::

The data from these counties was removed from the rate of change threshold analysis, and summary statistics re-calculated.

A single threshold will be selected and applied to all counties.

# Additional QC

```{r}
dat_filt <- dat_roll %>% 
  filter(!(county %in% c(c("Antigonish", "Colchester", "Digby", "Inverness", "Pictou", "Queens"))))
```

## Distribution

::: panel-tabset

### Figure 3: Distribution
```{r}
#| label: fig-histogram-filt
#| fig-height: 6
#| fig-cap: Distribution of the 24-hour rolling standard deviation of dissolved oxygen observations (binwidth = 0.25 percent saturation). 

p <- plot_histogram(dat_filt, hist_col = sd_roll, binwidth = 0.25) +
  scale_x_continuous("24-hour Standard Deviation (percent saturation)") 
  
ggplotly(p)
```

### Figure 4: Distribution Zoom
```{r}
#| label: fig-histogram-filt-zoom
#| fig-height: 6
#| fig-cap: Distribution of the 24-hour rolling standard deviation of dissolved oxygen observations (binwidth = 0.25 percent). Filtered to show only standard deviations > 4.

p <- dat_filt %>% 
  filter(sd_roll > 4) %>% 
  plot_histogram(hist_col = sd_roll, binwidth = 0.25) +
  scale_x_continuous("24-hour Standard Deviation (percent saturation)") 
  
ggplotly(p)
```

:::

## Summary Statistics

::: panel-tabset

### Figure 5: Central Tendancy
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of rolling standard deviation in each county.
#| label: fig-mean-filt

stats_filt <- dat_filt %>% 
  group_by(county) %>% 
  summarise(
    max = max(sd_roll),
    mean = mean(sd_roll),
    med = median(sd_roll),
    stdev = sd(sd_roll),
    
    q_95 = quantile(sd_roll, prob = 0.95),
    q_97 = quantile(sd_roll, prob = 0.97),
    q_99 = quantile(sd_roll, prob = 0.99),
    q_997 = quantile(sd_roll, prob = 0.997)
  ) %>% 
  rbind(
    dat_filt %>% 
      summarise(
        max = max(sd_roll),
        mean = mean(sd_roll),
        med = median(sd_roll),
        stdev = sd(sd_roll),
        
        q_95 = quantile(sd_roll, prob = 0.95),
        q_97 = quantile(sd_roll, prob = 0.97),
        q_99 = quantile(sd_roll, prob = 0.99),
        q_997 = quantile(sd_roll, prob = 0.997)
      ) %>% 
      mutate(county = "All")
  ) %>%
  mutate(
    variable = "dissolved oxygen_percent_saturation",
    thresh_3sd = mean + 3 * stdev,
    thresh_4sd = mean + 4 * stdev,
    across(.cols = where(is.numeric), .fns = round, digits = 2)
  )

p <- plot_mean_sd_county(stats_filt)

ggplotly(p)
```

### Figure 6: Quantiles
```{r}
#| fig-cap: Upper quantiles.
#| fig-height: 7
#| label: fig-quantiles-filt

p <- stats_filt %>% 
  select(county, contains("q")) %>% 
  pivot_longer(cols = contains("q"), names_to = "quantile") %>% 
  ggplot(aes(quantile, value, group = county, col = county)) +
  geom_point() +
  geom_line() +
  scale_color_manual(values = c(county_pal, "grey20"), drop = FALSE) +
  scale_y_continuous(limits = c(1.5, 11.75))

ggplotly(p)
```

### Table 3: Summary statistics
```{r}
stats_filt %>% 
  select(-c(variable, max, contains("thresh"))) %>% 
  datatable(
    options = list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
    ), rownames = FALSE)
```

:::

## Thresholds Comparison

```{r}

thresholds_county <- stats_filt %>% 
  mutate(
    thresh_3sd = mean + 3 * stdev,
    thresh_4sd = mean + 4 * stdev
  ) %>% 
  select(-c(mean, max, med, stdev, variable))

```

::: panel-tabset

### Figure 7: Potential Thresholds
```{r}
#| fig-height: 7

p <- thresholds_county %>% 
  pivot_longer(cols = c(-"county"), names_to = "threshold", values_to = "threshold_value") %>% 
  ggplot(aes(threshold, threshold_value, col = county, group = county)) +
  geom_point() +
  geom_line() +
  scale_colour_manual(values = c(county_pal, "grey20"), drop = FALSE)

ggplotly(p)
```


### Table 4: Potential Thresholds
```{r}
datatable(
  thresholds_county,
  list(
    dom = 'ft',
    paging = FALSE,
    searching = TRUE,
    scrollY = "500px",
    columnDefs = list(list(className = 'dt-center', targets = "_all"))
  ), rownames = FALSE)

```

:::

### Figure 8: Percent flagged
```{r}
#| fig-cap: Percent of all raw observations (no qc applied) flagged as Suspect for different thresholds. 

thresholds <- thresholds_county %>% filter(county == "All")

dat_summary <- dat_roll %>% 
  mutate(
    thresh_q95 = case_when(
      sd_roll > thresholds$q_95 ~ 3,
      sd_roll <= thresholds$q_95 ~ 1,
      is.na(sd_roll) ~ 2),
    thresh_q97 = case_when(
      sd_roll > thresholds$q_97 ~ 3,
      sd_roll <= thresholds$q_97 ~ 1,
      is.na(sd_roll) ~ 2),
    thresh_3sd = case_when(
      sd_roll > thresholds$thresh_3sd ~ 3,
      sd_roll <= thresholds$thresh_3sd ~ 1,
      is.na(sd_roll) ~ 2)
  ) %>%
  pivot_longer(
    cols = contains("thresh"),
    names_to = "threshold", values_to = "threshold_value"
  ) %>%
  group_by(threshold) %>%
  summarise(n_obs = n(), n_suspect = sum(threshold_value == 3)) %>%
  mutate(percent_suspect = round((100 * n_suspect / n_obs), digits = 3)) %>%
  ungroup()  

p <- dat_summary %>% 
  ggplot(aes(percent_suspect, threshold)) +
  geom_col(
    col = 1, fill = "#AE1759FF",
    position = position_dodge2(preserve = "single", padding = 0)
  ) +
  geom_vline(xintercept = 0) +
  scale_x_continuous(
    "Percent of Observations", expand = expansion(mult = c(0, 0.1))
  ) +
  scale_y_discrete(name = "Threshold", limits = rev)

ggplotly(p)
```
