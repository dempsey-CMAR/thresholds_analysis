---
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width = 8)

library(dplyr)
library(DT)
library(here)
library(ggplot2)
library(leaflet)
library(lubridate)
library(plotly)
library(RColorBrewer)
library(readr)
library(strings)
library(summaryplots)
library(viridis)

theme_set(theme_light())

x_axis <- scale_x_continuous("Dissolved Oxygen (percent saturation)")

dt_options <- list(
  dom = 'ft',
  paging = FALSE,
  searching = TRUE,
  scrollY = "500px",
  columnDefs = list(list(className = 'dt-center', targets = "_all"))
)

# data - preliminary QC 
dat_all <- import_strings_data(input_path = here("data-raw")) %>%
  select(COUNTY, WATERBODY, STATION, TIMESTAMP, DEPTH, VARIABLE, VALUE, UNITS) %>%
  filter(VARIABLE == "Dissolved Oxygen", UNITS == "percent saturation") %>%
  mutate(
    DEPTH = factor(round(as.numeric(DEPTH))),
    MONTH = month(TIMESTAMP),
    YEAR = factor(year(TIMESTAMP))
  ) 
    
# filtered data
dat_filt <- dat_all %>% 
   filter(
    !(STATION %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo")),
    !(COUNTY == "Inverness" & DEPTH %in% c(8, 18, 28, 36)),
    !(COUNTY == "Guysborough" & DEPTH == 60)
  )

# shallow data
dat_shallow <- dat_all %>% 
   filter(
     DEPTH %in% c(0, 1, 2, 3, 4, 5, 6), # ‘<=’ not meaningful for factors
    !(STATION %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo"))
  )

# dat_strict qc
exclude <- c("Antigonish", "Colchester", "Digby", "Inverness", "Pictou", "Queens")
dat_strict <- dat_all %>% 
  filter(
    !(COUNTY == "Guysborough" & DEPTH == 60),
    !(STATION %in% c("Piper Lake", "Hourglass Lake", "0193", "Sissiboo")),
    !(COUNTY %in% exclude)
  ) 

county_pal <- get_county_colour_palette(length(unique(dat_all$COUNTY)))
depth_pal <- viridis(length(unique(dat_all$DEPTH)), direction = -1)
year_pal <- viridis( length(unique(dat_all$YEAR)), option = "C")

theme_facet_plotly <- theme(
  panel.spacing.y = unit(30, "lines"),
  panel.spacing.x = unit(20, "lines")
)

```

# Dissolved Oxygen Distribution

DRAFT July 25, 2023

- Data submitted to the Open Data Portal in December 2022.
- Depth rounded to nearest whole number
  - Results in depth of 0 m for 1042 and Sissiboo.
  
- Preliminary QC (submitted to Open Data Portal)
  - Obvious outliers removed.
  - Suspected biofouling removed.

- Filtered Data
  - Fresh water stations not considered.
    - Piper Lake, Hourglass Lake, Sissiboo
  - Other "outlier" data series not considered
    - Data from Whycocmagh Bay near or below the oxycline (8, 18, 28, 36 m)
    - Tickle Island at 60 m

- Shallow Data
  - Filtered data, only considering depths <= 6 m
  
- Strict QC
  - Filtered data, plus excludes counties with high proportion of suspect data based on additional manual review (Antigonish, Colchester, Digby, Inverness, Pictou, Queens)


## Preliminary QC 

### Pooled

::: panel-tabset

#### Figure 1: All observations
```{r}
#| label: fig-dist-all
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %).

p <- plot_histogram(dat_all, hist_col = VALUE, binwidth = 2) +
  x_axis

ggplotly(p)
```

#### Figure 2: By depth
```{r}
#| label: fig-dist-all-depth
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by depth.

p <- plot_histogram(
  dat_all, hist_col = VALUE, binwidth = 2,
  fill_col = DEPTH, pal = depth_pal
) +
  x_axis

ggplotly(p)
```

#### Figure 3: By year
```{r}
#| label: fig-dist-all-year
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by year.

p <- plot_histogram(
  dat_all, hist_col = VALUE, binwidth = 2, 
  fill_col = YEAR, pal = year_pal
) +
  x_axis

ggplotly(p)
```

:::

### County

::: panel-tabset

#### Figure 4: County 
```{r}
#| label: fig-dist-county
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations by county (binwidth = 2 degrees C).

p <- dat_all %>% 
  plot_histogram(hist_col = VALUE, binwidth = 2) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```

#### Figure 5: County + Depth
```{r}
#| label: fig-dist-county-depth
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county, coloured by depth.

p <- plot_histogram(
  dat_all, hist_col = VALUE, binwidth = 2, fill_col = DEPTH, pal = depth_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly
  
ggplotly(p)
```

#### Figure 6: County + Year
```{r}
#| label: fig-dist-county-year
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county coloured by year.

p <- plot_histogram(
  dat_all, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```
:::

#### County + Month + Year

::: panel-tabset
```{r}
#| fig-height: 10
#| results: "asis"

counties <- unique(dat_all$COUNTY)

dat_all <- dat_all %>% 
  mutate(MONTH = month(MONTH, label = TRUE))

for(i in seq_along(counties)){
  
  county_i <- counties[i]
  dat_i <- dat_all %>% 
    filter(COUNTY == county_i) 
  
  cat('\n###', county_i, '\n')
  
  p <- plot_histogram(
    dat_i, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
  ) +
    x_axis +
    facet_wrap(~MONTH, ncol = 3)  
  
  print(p)
}

```
:::


## Filtered Data

### Pooled

::: panel-tabset

#### Figure 7: All observations
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %).

p <- plot_histogram(dat_filt, hist_col = VALUE, binwidth = 2) +
  x_axis

ggplotly(p)
```

#### Figure 8: By depth
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by depth.

p <- plot_histogram(
  dat_filt, hist_col = VALUE, binwidth = 2,
  fill_col = DEPTH, pal = depth_pal
) +
  x_axis

ggplotly(p)
```

#### Figure 9: By year
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by year.

p <- plot_histogram(
  dat_filt, hist_col = VALUE, binwidth = 2, 
  fill_col = YEAR, pal = year_pal
) +
  x_axis

ggplotly(p)
```

:::

### County

::: panel-tabset

#### Figure 10: County 
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations by county (binwidth = 2 degrees C).

p <- dat_filt %>% 
  plot_histogram(hist_col = VALUE, binwidth = 2) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```

#### Figure 11: County + Depth
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county, coloured by depth.

p <- plot_histogram(
  dat_filt, hist_col = VALUE, binwidth = 2, fill_col = DEPTH, pal = depth_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly
  
ggplotly(p)
```

#### Figure 12: County + Year
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county coloured by year.

p <- plot_histogram(
  dat_filt, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```
:::

#### County + Month + Year

::: panel-tabset
```{r}
#| fig-height: 10
#| results: "asis"

counties <- unique(dat_filt$COUNTY)

dat_filt <- dat_filt %>% 
  mutate(MONTH = month(MONTH, label = TRUE))

for(i in seq_along(counties)){
  
  county_i <- counties[i]
  dat_i <- dat_filt %>% 
    filter(COUNTY == county_i) 
  
  cat('\n###', county_i, '\n')
  
  p <- plot_histogram(
    dat_i, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
  ) +
    x_axis +
    facet_wrap(~MONTH, ncol = 3)  
  
  print(p)
}

```
:::


## Shallow Data

### Pooled

::: panel-tabset

#### Figure 13: All observations
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %).

p <- plot_histogram(dat_shallow, hist_col = VALUE, binwidth = 2) +
  x_axis

ggplotly(p)
```

#### Figure 14: By depth
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by depth.

p <- plot_histogram(
  dat_shallow, hist_col = VALUE, binwidth = 2,
  fill_col = DEPTH, pal = depth_pal
) +
  x_axis

ggplotly(p)
```

#### Figure 15: By year
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by year.

p <- plot_histogram(
  dat_shallow, hist_col = VALUE, binwidth = 2, 
  fill_col = YEAR, pal = year_pal
) +
  x_axis

ggplotly(p)
```

:::

### County

::: panel-tabset

#### Figure 15: County 
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations by county (binwidth = 2 degrees C).

p <- dat_shallow %>% 
  plot_histogram(hist_col = VALUE, binwidth = 2) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```

#### Figure 16: County + Depth
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county, coloured by depth.

p <- plot_histogram(
  dat_shallow, hist_col = VALUE, binwidth = 2, fill_col = DEPTH, pal = depth_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly
  
ggplotly(p)
```

#### Figure 17: County + Year
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county coloured by year.

p <- plot_histogram(
  dat_shallow, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```
:::

#### County + Month + Year

::: panel-tabset
```{r}
#| fig-height: 10
#| results: "asis"

counties <- unique(dat_filt$COUNTY)

dat_shallow <- dat_shallow %>% 
  mutate(MONTH = month(MONTH, label = TRUE))

for(i in seq_along(counties)){
  
  county_i <- counties[i]
  dat_i <- dat_shallow %>% 
    filter(COUNTY == county_i) 
  
  cat('\n###', county_i, '\n')
  
  p <- plot_histogram(
    dat_i, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
  ) +
    x_axis +
    facet_wrap(~MONTH, ncol = 3)  
  
  print(p)
}

```
:::

## Strict Data

### Pooled

::: panel-tabset

#### Figure 18: All observations
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %).

p <- plot_histogram(dat_strict, hist_col = VALUE, binwidth = 2) +
  x_axis

ggplotly(p)
```

#### Figure 19: By depth
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by depth.

p <- plot_histogram(
  dat_strict, hist_col = VALUE, binwidth = 2,
  fill_col = DEPTH, pal = depth_pal
) +
  x_axis

ggplotly(p)
```

#### Figure 20: By year
```{r}
#| fig-height: 6
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), coloured by year.

p <- plot_histogram(
  dat_strict, hist_col = VALUE, binwidth = 2, 
  fill_col = YEAR, pal = year_pal
) +
  x_axis

ggplotly(p)
```

:::

### County

::: panel-tabset

#### Figure 21: County 
```{r}
#| fig-height: 12
#| fig-cap: Distribution of dissolved oxygen observations by county (binwidth = 2 degrees C).

p <- dat_strict %>% 
  plot_histogram(hist_col = VALUE, binwidth = 2) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```

#### Figure 22: County + Depth
```{r}
#| fig-height: 9
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county, coloured by depth.

p <- plot_histogram(
  dat_strict, hist_col = VALUE, binwidth = 2, fill_col = DEPTH, pal = depth_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly
  
ggplotly(p)
```

#### Figure 23: County + Year
```{r}
#| fig-height: 9
#| fig-cap: Distribution of dissolved oxygen observations (binwidth = 2 %), within each county coloured by year.

p <- plot_histogram(
  dat_strict, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
) +
  x_axis +
  facet_wrap(~COUNTY, scales = "free", ncol = 3) +
  theme_facet_plotly

ggplotly(p)
```
:::

#### County + Month + Year

::: panel-tabset
```{r}
#| fig-height: 10
#| results: "asis"

counties <- unique(dat_strict$COUNTY)

dat_strict <- dat_strict %>% 
  mutate(MONTH = month(MONTH, label = TRUE))

for(i in seq_along(counties)){
  
  county_i <- counties[i]
  dat_i <- dat_strict %>% 
    filter(COUNTY == county_i) 
  
  cat('\n###', county_i, '\n')
  
  p <- plot_histogram(
    dat_i, hist_col = VALUE, binwidth = 2, fill_col = YEAR, pal = year_pal
  ) +
    x_axis +
    facet_wrap(~MONTH, ncol = 3)  
  
  print(p)
}

```
:::






