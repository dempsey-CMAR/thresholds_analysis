---
format: 
  html:
    toc: true
    toc-depth: 3
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, dpi = 600, fig.width=8)

library(dplyr)
library(DT)
library(here)
library(ggplot2)
library(lubridate)
library(plotly)
library(readr)
library(quarto)

theme_set(theme_light())

dt_options <- list(
      dom = 'ft',
      paging = FALSE,
      searching = TRUE,
      scrollY = "500px",
      pageLength = 500,
      columnDefs = list(list(className = 'dt-center', targets = "_all"))
)


dat <- read_csv(here("data/summary.csv"), show_col_types = FALSE) 

```

# EXPLORATORY ANALYSIS: THRESHOLDS

- Data submitted to the Open Data Portal in December 2022.

- Preliminary QC was applied to the data.
  - Obvious outliers removed.
  - Suspected biofouling removed.
  
- Depth rounded to nearest whole number
  - Results in depth of 0 m for 1042, Captains Pond, Ile due Havre, Sissiboo, Sober Island. and Back Harbour.

# Temperature:  Gross Range

```{r}
temp_county <- dat %>% 
  filter(group == "county" | group == "all_data", variable == "Temperature") %>% 
  mutate(
    county = if_else(group == "all_data", "All", county),
    n_percent = round(n * 100 / max(n), digits = 1)
  ) %>% 
  select(-c(depth, month, group))
```

## County

::: panel-tabset

### Figure 1
```{r}
#| fig-height: 8
#| fig-cap: The number of temperatures observations in each county. The number at the end of each bar indicates the percent of the total temperature observations from the associated county.
#| fig-cap-location: top

p <- temp_county %>% 
  filter(county != "All") %>% 
  ggplot(aes(n, county)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  geom_text(aes(label = n_percent), nudge_x = 1.7e5, size = 3) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Temperature Observations")

ggplotly(p)

```

### Figure 2
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- ggplot(temp_county, aes(mean, county)) +
  geom_point(size = 4) +
  geom_errorbar(aes(xmin = mean - stdev, xmax = mean + stdev), width = 0) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Temperature (mean +/- standard deviation)")

ggplotly(p)

```

### Table 1
```{r}
#| fig-cap: Summary statistics of temperature observations - total and by county.
#| fig-cap-location: top

temp_county %>% 
  select(county, n, mean, stdev) %>% 
  datatable(options = dt_options, rownames = FALSE)
```

:::

## Depth

```{r}
temp_depth <- dat %>% 
  filter(group == "all_depth", variable == "Temperature") %>% 
  mutate(n_percent = round(n * 100 / sum(n), digits = 1)) %>% 
  select(-c(month, group, station, units, variable, county))
```

::: panel-tabset

### Figure 3
```{r}
#| fig-height: 10
#| fig-cap: Number of temperature observations at each depth (where depth is rounded to the nearest whole number).
#| fig-cap-location: top

p <- ggplot(temp_depth, aes(n, factor(depth), fill = factor(depth))) +
  geom_col(position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)) +
  scale_x_continuous("Number of Temperature Observations") +
  scale_y_discrete(name = "Sensor Depth Below Surface at Low Tide (m)", limits = rev) +
  theme(legend.position = "none")

ggplotly(p)

```

### Figure 4
```{r}
#| fig-height: 10
#| fig-cap: Mean and standard deviation of temperature at each depth.
#| fig-cap-location: top

p <- ggplot(temp_depth, aes(mean, depth, col = factor(depth))) +
   geom_point(size = 1) +
   geom_errorbar(aes(xmin = mean - stdev, xmax = mean + stdev), width = 0) +
    scale_y_reverse(name = "Sensor Depth Below the Surface at Low Tide (m)") +
   scale_x_continuous("Temperature (mean +/- standard deviation)") 
  
ggplotly(p)

```

:::

## County + Depth

::: panel-tabset

### Figure 5
```{r}
#| fig.height: 8
#| fig-cap: Depths with temperature measurements by county.
#| fig-cap-location: top

temp_county_depth <- dat %>% 
  filter(group == "county_depth",
         variable == "Temperature") 

p <- ggplot(temp_county_depth, aes(depth, county, col = factor(depth))) +
  geom_point(size = 4) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Sensor Depth Below the Surface at Low Tide (m)")

ggplotly(p)

```

### Figure 6
```{r}
#| fig-height: 12
#| fig-cap: The number of temperature obervations at each depth for each county.
#| fig-cap-location: top

p <- ggplot(temp_county_depth, aes(n, factor(depth), fill = factor(depth))) +
  geom_col() +
  scale_y_discrete(name = "Sensor Depth Below the Surface at Low Tide (m)", limits = rev) +
  scale_x_continuous("Number of Temperature Observations") +
  facet_wrap(~ county, ncol = 3) +
  theme(legend.position = "none")

ggplotly(p)

```

### Figure 7
```{r}
#| fig-height: 12
#| fig-cap: Average temperature and standard deviation for each county at each measured depth. 

p <- ggplot(temp_county_depth, aes(mean, depth, col = factor(depth))) +
   geom_point(size = 1) +
   geom_errorbar(aes(xmin = mean - stdev, xmax = mean + stdev), width = 0) +
    scale_y_reverse(name = "Sensor Depth Below the Surface at Low Tide (m)") +
   scale_x_continuous("Temperature (mean +/- standard deviation)") +
   facet_wrap(~ county, ncol = 3)
  
ggplotly(p)

```
:::

- Could group depths before average, but how to group? 15 m could be bottom for 1 station and middle of water column for another.
- If do by depth, should be station + depth
- Digby 31 m: measured at Long Island from January - May; 32: measured at Long Island 2 from July - November.
- Guysborough 11 m: only measured for Tanner Island and English Harbour in Winter 2019 (February - March). Bottom temp.
- Inverness: only one deployment for many depths
- Lunenburg: clear decease in temperature at depth.
- Shelburne 16 m: measured at Ingomar from Janurary - May, then only at 15 m
- Victoria: not a lot of difference in temperature through the water column



# Temperature: Climatology

## Month
```{r}
temp_month <- dat %>% 
  filter(group == "all_month", variable == "Temperature") %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) 
```

::: panel-tabset

### Figure 8
```{r}
#| fig-height: 8
#| fig-cap: The number of temperatures observations in each month. The number at the end of each bar indicates the percent of the total temperature observations from the associated month.
#| fig-cap-location: top

p <- ggplot(temp_month, aes(n, month)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  geom_text(aes(label = n_percent), nudge_x = 1e5, size = 3) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Temperature Observations")

ggplotly(p)

```

### Figure 9
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- ggplot(temp_month, aes(mean, month)) +
  geom_point(size = 4) +
  geom_errorbar(aes(xmin = mean - stdev, xmax = mean + stdev), width = 0) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Temperature (mean +/- standard deviation)")

ggplotly(p)

```

:::

## Month + County
```{r}
temp_month_county <- dat %>% 
  filter(group == "county_month", variable == "Temperature") %>% 
  mutate(
    n_percent = round(n * 100 / sum(n), digits = 1),
    month = month(month, label = TRUE)
  ) 
```

### Figure 10
```{r}
#| fig-height: 12
#| fig-cap: The number of temperatures observations in each month. The number at the end of each bar indicates the percent of the total temperature observations from the associated month.
#| fig-cap-location: top

p <- ggplot(temp_month_county, aes(n, month)) +
  geom_col(
    position = position_dodge2(preserve = "single", reverse = TRUE, padding = 0)
  ) +
  scale_y_discrete(name = "", limits = rev) +
  scale_x_continuous("Number of Temperature Observations") +
  facet_wrap(~ county, ncol = 3)

ggplotly(p)

```

### Figure 11
```{r}
#| fig-height: 8
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- ggplot(temp_month_county, aes(month, mean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = mean - stdev, ymax = mean + stdev), width = 0) +
  scale_x_discrete(name = "") +
  scale_y_continuous("Temperature (mean +/- standard deviation)") + facet_wrap(~ county, ncol = 3)

ggplotly(p)

```

### Figure 12
```{r}
#| fig-height: 12
#| fig-cap: The mean and standard deviation of temperature in each county.
#| fig-cap-location: top

p <- ggplot(temp_month_county, aes(month, mean, group = county, col = county)) +
  geom_point(size = 3) +
  geom_line(aes(col = county)) +
  geom_ribbon(aes(ymin = mean - stdev, ymax = mean + stdev,
                  fill = county), alpha = 0.25, col = NA) +
  scale_x_discrete(name = "") +
  scale_y_continuous("Temperature (mean +/- standard deviation)") 

ggplotly(p)

```

:::

- Cape Breton: few temperature observations each month.
- Inverness: most temperature observations from June to November.
- Could try grouping by YEAR and MONTH to see how many observations.






